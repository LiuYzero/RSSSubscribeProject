{
  'rss': {
    'channel': {
      'title': 'Linux 中国◆开源社区',
      'link': [
        'https://linux.cn/',
        {
          '@href': 'https://linux.cn/rss.xml',
          '@rel': 'self',
          '@type': 'application/rss+xml',
          '#text': None
        }
      ],
      'description': 'Linux 中国◆开源社区',
      'lastBuildDate': 'Mon, 01 Mar 2021 19:48:38 +0800',
      'pubDate': 'Mon, 01 Mar 2021 19:48:38 +0800',
      'language': 'zh-CN',
      'image': {
        'link': 'https://linux.cn/',
        'url': 'https://img.linux.net.cn/static/image/common/linuxcn_logo_64.gif',
        'title': 'Linux 中国◆开源社区'
      },
      'item': [
        {
          'title': '硬核观察 | 谷歌利用 AI 优化 AI 芯片架构的设计',
          'link': 'https://linux.cn/article-13166-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13166-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/102527l5zkg5v1g0vzd5fy.jpg" alt="" width="1280" height="720" /></p>\n<h3 id="%E8%B0%B7%E6%AD%8C%E5%88%A9%E7%94%A8-ai-%E4%BC%98%E5%8C%96-ai-%E8%8A%AF%E7%89%87%E6%9E%B6%E6%9E%84%E7%9A%84%E8%AE%BE%E8%AE%A1" class="code-line" data-line="0">谷歌利用 AI 优化 AI 芯片架构的设计</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/102543z0dwzhgwnclhwjnd.jpg" alt="" width="800" height="500" /></p>\n<p class="code-line" data-line="2">据<a title="https://www.zdnet.com/article/googles-deep-learning-finds-a-critical-path-in-ai-chips/" href="https://www.zdnet.com/article/googles-deep-learning-finds-a-critical-path-in-ai-chips/" data-href="https://www.zdnet.com/article/googles-deep-learning-finds-a-critical-path-in-ai-chips/">报道</a>，本月谷歌发表的一篇<a title="https://arxiv.org/abs/2102.01723" href="https://arxiv.org/abs/2102.01723" data-href="https://arxiv.org/abs/2102.01723">论文</a>披露了被称为&ldquo;第一个可转移的架构探索基础设施&rdquo; Apollo，这是第一个在不同芯片上工作得越多，就越能更好地探索可能的芯片架构的程序，从而将所学到的知识转移到每个新的任务中。</p>\n<p class="code-line" data-line="4">团队正在开发的芯片本身就是用于人工智能的芯片，因此，这是用 AI 来设计运行 AI 的芯片。在 Apollo 中，将为神经网络和生物合成设计的方法汇集在一起，设计出可能反过来用于神经网络和生物合成设计的电路。</p>\n<p class="code-line" data-line="6">我觉得这就非常神奇，但是我也觉得有点可怕了。</p>\n<h3 id="linux-mint-%E5%BC%80%E5%8F%91%E8%80%85%E7%A7%B0%E5%8F%AF%E8%83%BD%E5%83%8F-windows-%E4%B8%80%E6%A0%B7%E5%AF%B9%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E8%A1%8C%E5%BC%BA%E5%88%B6%E6%9B%B4%E6%96%B0" class="code-line" data-line="8">Linux Mint 开发者称可能像 Windows 一样对用户操作系统进行强制更新</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/102605o8vg51vih18viw16.jpg" alt="" width="800" height="450" /></p>\n<p class="code-line" data-line="10">之前我们报道过，<a title="https://linux.cn/article-13141-1.html" href="https://linux.cn/article-13141-1.html" data-href="https://linux.cn/article-13141-1.html">大约只有 30% 的 Linux Mint 用户在一周内应用了更新</a>。而现在，Linux Mint 开发者似乎正在借鉴微软的做法，计划强制用户进行一些更新。Linux Mint 称，&ldquo;我们开始对更新管理器进行改进&hellip;&hellip;在某些情况下，更新管理器将能够提醒用户应该进行应用更新。在少数情况下，它甚至可能会显得&lsquo;固执己见&rsquo;&rdquo;，当然，这种强制性是可配置的，毕竟这是用户的电脑。当然，如何执行还在讨论当中。</p>\n<p class="code-line" data-line="12">所以，微软强制更新 Windows 的策略是对的吗？</p>\n<h3 id="%E8%B0%B7%E6%AD%8C%E5%8F%91%E5%B8%83%E4%BA%86%E4%B8%80%E4%B8%AA-windows-10-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%A6%82%E5%BF%B5%E8%AF%81%E6%98%8E%E4%BB%A3%E7%A0%81" class="code-line" data-line="14">谷歌发布了一个 Windows 10 远程代码执行漏洞的概念证明代码</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/102618dhypa4u5u7rup4r2.jpg" alt="" width="800" height="450" /></p>\n<p class="code-line" data-line="16">只要访问一个网页就可以利用这个<a title="https://bugs.chromium.org/p/project-zero/issues/detail?id=2123" href="https://bugs.chromium.org/p/project-zero/issues/detail?id=2123" data-href="https://bugs.chromium.org/p/project-zero/issues/detail?id=2123">漏洞</a>。这个问题是 Windows 字体渲染器中的一个漏洞。该渲染器也是所有浏览器都会使用的，它容易被特制的 TrueType 字体破坏，从而导致其内存损坏和崩溃，然后可以用来运行内核权限的代码。不过该漏洞已经在 Windows 10 的 2 月累积更新中得到了修复。</p>\n<p class="code-line" data-line="18">远程漏洞是最严重的，尤其这还是一个基于网页就可以进行的攻击。结合上一条，有时候有些补丁真是得强制？</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Mon, 01 Mar 2021 10:26:00 +0800',
          'comments': 'https://linux.cn/article-13166-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '使用 duf 终端工具检查你的磁盘使用情况',
          'link': 'https://linux.cn/article-13165-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13165-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/091533qkx95xomkzfmsdxo.jpg" width="1280" height="720" /></p>\n<blockquote>\n<p><code>duf</code>&nbsp;是一个终端工具，旨在增强传统的 Linux 命令&nbsp;<code>df</code>&nbsp;和&nbsp;<code>du</code>。它可以让你轻松地检查可用磁盘空间，对输出进行分类，并以用户友好的方式呈现。</p>\n</blockquote>\n<h3 id="duf%E4%B8%80%E4%B8%AA%E7%94%A8-golang-%E7%BC%96%E5%86%99%E7%9A%84%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%A3%81%E7%9B%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5%E5%B7%A5%E5%85%B7" class="mume-header">duf：一个用 Golang 编写的跨平台磁盘使用情况工具</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/091542sgmflzc4fh4gzcrf.jpg" alt="" /></p>\n<p>在我知道这个工具之前，我更喜欢使用像&nbsp;<a href="https://itsfoss.com/optimize-ubuntu-stacer/">Stacer</a>&nbsp;这样的 GUI 程序或者预装的 GNOME 磁盘使用情况程序来&nbsp;<a href="https://itsfoss.com/check-free-disk-space-linux/">检查可用的磁盘空间</a>&nbsp;和系统的磁盘使用量。</p>\n<p>不过，<a href="https://github.com/muesli/duf">duf</a>&nbsp;似乎是一个有用的终端工具，可以检查磁盘使用情况和可用空间，它是用&nbsp;<a href="https://golang.org/">Golang</a>&nbsp;编写的。Abhishek 建议我试一试它，但我对它很感兴趣，尤其是考虑到我目前正在学习 Golang，真是太巧了!</p>\n<p>无论你是终端大师还是只是一个对终端不适应的初学者，它都相当容易使用。当然，它比&nbsp;<a href="https://linuxhandbook.com/df-command/">检查磁盘空间利用率命令 df</a>&nbsp;更容易理解。</p>\n<p>在你把它安装到你的系统上之前，让我重点介绍一下它的一些主要功能和用法。</p>\n<h3 id="duf-%E7%9A%84%E7%89%B9%E7%82%B9" class="mume-header">duf 的特点</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/091543hd8ahk461m7ehk1m.jpg" alt="" /></p>\n<ul>\n<li>提供所有挂载设备的概览且易于理解。</li>\n<li>能够指定目录/文件名并检查该挂载点的可用空间。</li>\n<li>更改/删除输出中的列。</li>\n<li>列出&nbsp;<a href="https://linuxhandbook.com/inode-linux/">inode</a>&nbsp;信息。</li>\n<li>输出排序。</li>\n<li>支持 JSON 输出。</li>\n<li>如果不能自动检测终端的主题，可以指定主题。</li>\n</ul>\n<h3 id="%E5%9C%A8-linux-%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8-duf" class="mume-header">在 Linux 上安装和使用 duf</h3>\n<p>你可以在&nbsp;<a href="https://itsfoss.com/aur-arch-linux/">AUR</a>&nbsp;中找到一个 Arch Linux 的软件包。如果你使用的是&nbsp;<a href="https://github.com/NixOS/nixpkgs">Nix 包管理器</a>，也可以找到一个包。</p>\n<p>对于基于 Debian 的发行版和 RPM 包，你可以去它的&nbsp;<a href="https://github.com/muesli/duf/releases">GitHub 发布区</a>&nbsp;中获取适合你系统的包。</p>\n<p>它也适用于 Windows、Android、macOS 和 FreeBSD。</p>\n<p>在我这里，我需要&nbsp;<a href="https://itsfoss.com/install-deb-files-ubuntu/">安装 DEB 包</a>，然后就可以使用了。安装好后，使用起来很简单，你只要输入：</p>\n<pre class="prettyprint linenums"><code>duf\n</code></pre>\n<p>这应该会给你提供所有本地设备、已挂载的任何云存储设备以及任何其他特殊设备（包括临时存储位置等）的详细信息。</p>\n<p>如果你想一目了然地查看所有&nbsp;<code>duf</code>&nbsp;的可用命令，你可以输入：</p>\n<pre class="prettyprint linenums"><code>duf --help\n</code></pre>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/091543tou8h66uzhqj6s6u.jpg" alt="" /></p>\n<p>例如，如果你只想查看本地连接设备的详细信息，而不是其他的，你只需要输入：</p>\n<pre class="prettyprint linenums"><code>duf --only local\n</code></pre>\n<p>另一个例子是根据大小按特定顺序对输出进行排序，下面是你需要输入的内容：</p>\n<pre class="prettyprint linenums"><code>duf --sort size\n</code></pre>\n<p>输出应该是像这样的：</p>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202103/01/091544d46wffdg1g40fv06.jpg" alt="" /></p>\n<p>你可以探索它的&nbsp;<a href="https://github.com/muesli/duf">GitHub 页面</a>，以获得更多关于额外命令和安装说明的信息。</p>\n<ul>\n<li><a href="https://github.com/muesli/duf">下载 duf</a></li>\n</ul>\n<h3 id="%E7%BB%93%E6%9D%9F%E8%AF%AD" class="mume-header">结束语</h3>\n<p>我发现终端工具&nbsp;<code>duf</code>&nbsp;相当方便，可以在不需要使用 GUI 程序的情况下，随时查看可用磁盘空间或使用情况。</p>\n<p>你知道有什么类似的工具吗？欢迎在下面的评论中告诉我你的想法。</p>\n<hr />\n<p>via:&nbsp;<a href="https://itsfoss.com/duf-disk-usage/">https://itsfoss.com/duf-disk-usage/</a></p>\n<p>作者：<a href="https://itsfoss.com/author/ankush/">Ankush Das</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/geekpi">geekpi</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Mon, 01 Mar 2021 09:15:42 +0800',
          'comments': 'https://linux.cn/article-13165-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': 'Ansible 点对点命令快速入门指南示例',
          'link': 'https://linux.cn/article-13163-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13163-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/221449b8ldh7v4ll8dw774.jpg" alt="" width="1280" height="720" /></p>\n<p>之前，我们写了一篇有关&nbsp;<a href="https://linux.cn/article-13142-1.html">Ansible 安装和配置</a>&nbsp;的文章。在那个教程中只包含了一些使用方法的示例。如果你是 Ansible 新手，建议你阅读上篇文章。一旦你熟悉了，就可以继续阅读本文了。</p>\n<p>默认情况下，Ansible 仅使用 5 个并行进程。如果要在多个主机上执行任务，需要通过添加&nbsp;<code>-f [进程数]</code>&nbsp;选项来手动设置进程数。</p>\n<h3 id="%E4%BB%80%E4%B9%88%E6%98%AFruby%E7%82%B9%E5%AF%B9%E7%82%B9rtad-hocrtruby%E5%91%BD%E4%BB%A4" class="mume-header">什么是<ruby>点对点<rt>ad-hoc</rt></ruby>命令？</h3>\n<p>点对点命令用于在一个或多个受控节点上自动执行任务。它非常简单，但是不可重用。它使用&nbsp;<code>/usr/bin/ansible</code>&nbsp;二进制文件执行所有操作。</p>\n<p>点对点命令最适合运行一次的任务。例如，如果要检查指定用户是否可用，你可以使用一行命令而无需编写剧本。</p>\n<h4 id="%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E8%A6%81%E4%BA%86%E8%A7%A3%E7%82%B9%E5%AF%B9%E7%82%B9%E5%91%BD%E4%BB%A4" class="mume-header">为什么你要了解点对点命令？</h4>\n<p>点对点命令证明了 Ansible 的简单性和强大功能。从 2.9 版本开始，它支持 3389 个模块，因此你需要了解和学习要定期使用的 Ansible 模块列表。</p>\n<p>如果你是一个 Ansible 新手，可以借助点对点命令轻松地练习这些模块及参数。</p>\n<p>你在这里学习到的概念将直接移植到剧本中。</p>\n<p><strong>点对点命令的一般语法：</strong></p>\n<pre class="prettyprint linenums"><code>ansible [模式] -m [模块] -a "[模块选项]"\n</code></pre>\n<p>点对点命令包含四个部分，详细信息如下：</p>\n<table border="1" cellpadding="4">\n<thead>\n<tr>\n<th>部分</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ansible</code></td>\n<td>命令</td>\n</tr>\n<tr>\n<td>模式</td>\n<td>输入清单或指定组</td>\n</tr>\n<tr>\n<td>模块</td>\n<td>运行指定的模块名称</td>\n</tr>\n<tr>\n<td>模块选项</td>\n<td>指定模块参数</td>\n</tr>\n</tbody>\n</table>\n<h4 id="%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-ansible-%E6%B8%85%E5%8D%95%E6%96%87%E4%BB%B6" class="mume-header">如何使用 Ansible 清单文件</h4>\n<p>如果使用 Ansible 的默认清单文件&nbsp;<code>/etc/ansible/hosts</code>，你可以直接调用它。否则你可以使用&nbsp;<code>-i</code>&nbsp;选项指定 Ansible 清单文件的路径。</p>\n<h4 id="%E4%BB%80%E4%B9%88%E6%98%AF%E6%A8%A1%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%AE%83" class="mume-header">什么是模式以及如何使用它？</h4>\n<p>Ansible 模式可以代指某个主机、IP 地址、清单组、一组主机或者清单中的所有主机。它允许你对它们运行命令和剧本。模式非常灵活，你可以根据需要使用它们。</p>\n<p>例如，你可以排除主机、使用通配符或正则表达式等等。</p>\n<p>下表描述了常见的模式以及用法。但是，如果它不能满足你的需求，你可以在&nbsp;<code>ansible-playbook</code>&nbsp;中使用带有&nbsp;<code>-e</code>&nbsp;参数的模式中的变量。</p>\n<table border="1" cellpadding="4">\n<thead>\n<tr>\n<th>描述</th>\n<th>模式</th>\n<th>目标</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>所有主机</td>\n<td><code>all</code>（或&nbsp;<code>*</code>）</td>\n<td>对清单中的所有服务器运行 Ansible</td>\n</tr>\n<tr>\n<td>一台主机</td>\n<td><code>host1</code></td>\n<td>只针对给定主机运行 Ansible</td>\n</tr>\n<tr>\n<td>多台主机</td>\n<td><code>host1:host2</code>（或&nbsp;<code>host1,host2</code>）</td>\n<td>对上述多台主机运行 Ansible</td>\n</tr>\n<tr>\n<td>一组</td>\n<td><code>webservers</code></td>\n<td>在&nbsp;<code>webservers</code>&nbsp;群组中运行 Ansible</td>\n</tr>\n<tr>\n<td>多组</td>\n<td><code>webservers:dbservers</code></td>\n<td><code>webservers</code>&nbsp;中的所有主机加上&nbsp;<code>dbservers</code>&nbsp;中的所有主机</td>\n</tr>\n<tr>\n<td>排除组</td>\n<td><code>webservers:!atlanta</code></td>\n<td><code>webservers</code>&nbsp;中除&nbsp;<code>atlanta</code>&nbsp;以外的所有主机</td>\n</tr>\n<tr>\n<td>组之间的交集</td>\n<td><code>webservers:&amp;staging</code></td>\n<td><code>webservers</code>&nbsp;中也在&nbsp;<code>staging</code>&nbsp;的任何主机</td>\n</tr>\n</tbody>\n</table>\n<h4 id="%E4%BB%80%E4%B9%88%E6%98%AF-ansible-%E6%A8%A1%E5%9D%97%E5%AE%83%E5%B9%B2%E4%BA%86%E4%BB%80%E4%B9%88" class="mume-header">什么是 Ansible 模块，它干了什么？</h4>\n<p>模块，也称为&ldquo;任务插件&rdquo;或&ldquo;库插件&rdquo;，它是一组代码单元，可以直接或通过剧本在远程主机上执行指定任务。</p>\n<p>Ansible 在远程目标节点上执行指定模块并收集其返回值。</p>\n<p>每个模块都支持多个参数，可以满足用户的需求。除少数模块外，几乎所有模块都采用&nbsp;<code>key=value</code>&nbsp;参数。你可以一次添加带有空格的多个参数，而&nbsp;<code>command</code>&nbsp;或&nbsp;<code>shell</code>&nbsp;模块会直接运行你输入的字符串。</p>\n<p>我们将添加一个包含最常用的&ldquo;模块选项&rdquo;参数的表。</p>\n<p>列出所有可用的模块，运行以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible-doc -l\n</code></pre>\n<p>运行以下命令来阅读指定模块的文档：</p>\n<pre class="prettyprint linenums"><code>$ ansible-doc [模块]\n</code></pre>\n<h3 id="1%E5%A6%82%E4%BD%95%E5%9C%A8-linux-%E4%B8%8A%E4%BD%BF%E7%94%A8-ansible-%E5%88%97%E5%87%BA%E7%9B%AE%E5%BD%95%E7%9A%84%E5%86%85%E5%AE%B9" class="mume-header">1）如何在 Linux 上使用 Ansible 列出目录的内容</h3>\n<p>可以使用 Ansible&nbsp;<code>command</code>&nbsp;模块来完成这项操作，如下所示。我们列出了&nbsp;<code>node1.2g.lab</code>&nbsp;和&nbsp;<code>nod2.2g.lab</code>* 远程服务器上&nbsp;<code>daygeek</code>&nbsp;用户主目录的内容。</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m command -a "ls -lh /home/daygeek"\n\nnode1.2g.lab | CHANGED | rc=0 &gt;&gt;\ntotal 12K\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Desktop\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Documents\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Downloads\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Music\n-rwxr-xr-x. 1 daygeek daygeek 159 Mar  4  2019 passwd-up.sh\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Pictures\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Public\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Templates\n-rwxrwxr-x. 1 daygeek daygeek 138 Mar 10  2019 user-add.sh\n-rw-rw-r--. 1 daygeek daygeek  18 Mar 10  2019 user-list1.txt\ndrwxr-xr-x. 2 daygeek daygeek   6 Feb 15  2019 Videos\n\nnode2.2g.lab | CHANGED | rc=0 &gt;&gt;\ntotal 0\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Desktop\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Documents\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Downloads\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Music\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Pictures\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Public\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Templates\ndrwxr-xr-x. 2 daygeek daygeek 6 Nov  9 09:55 Videos\n</code></pre>\n<h3 id="2%E5%A6%82%E4%BD%95%E5%9C%A8-linux-%E4%BD%BF%E7%94%A8-ansible-%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6" class="mume-header">2）如何在 Linux 使用 Ansible 管理文件</h3>\n<p>Ansible 的&nbsp;<code>copy</code>&nbsp;模块将文件从本地系统复制到远程系统。使用 Ansible&nbsp;<code>command</code>&nbsp;模块将文件移动或复制到远程计算机。</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m copy -a "src=/home/daygeek/backup/CentOS7.2daygeek.com-20191025.tar dest=/home/u1" --become\n\nnode1.2g.lab | CHANGED =&gt; {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/bin/python"\n    },\n    "changed": true,\n    "checksum": "ad8aadc0542028676b5fe34c94347829f0485a8c",\n    "dest": "/home/u1/CentOS7.2daygeek.com-20191025.tar",\n    "gid": 0,\n    "group": "root",\n    "md5sum": "ee8e778646e00456a4cedd5fd6458cf5",\n    "mode": "0644",\n    "owner": "root",\n    "secontext": "unconfined_u<img src="https://img.linux.net.cn/static/image/smiley/default/shocked.gif" smilieid="6" border="0" alt="" />bject_r:user_home_t:s0",\n    "size": 30720,\n    "src": "/home/daygeek/.ansible/tmp/ansible-tmp-1579726582.474042-118186643704900/source",\n    "state": "file",\n    "uid": 0\n}\n\nnode2.2g.lab | CHANGED =&gt; {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/libexec/platform-python"\n    },\n    "changed": true,\n    "checksum": "ad8aadc0542028676b5fe34c94347829f0485a8c",\n    "dest": "/home/u1/CentOS7.2daygeek.com-20191025.tar",\n    "gid": 0,\n    "group": "root",\n    "md5sum": "ee8e778646e00456a4cedd5fd6458cf5",\n    "mode": "0644",\n    "owner": "root",\n    "secontext": "unconfined_u<img src="https://img.linux.net.cn/static/image/smiley/default/shocked.gif" smilieid="6" border="0" alt="" />bject_r:user_home_t:s0",\n    "size": 30720,\n    "src": "/home/daygeek/.ansible/tmp/ansible-tmp-1579726582.4793239-237229399335623/source",\n    "state": "file",\n    "uid": 0\n}\n</code></pre>\n<p>我们可以运行以下命令进行验证：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m command -a "ls -lh /home/u1" --become\n\nnode1.2g.lab | CHANGED | rc=0 &gt;&gt;\ntotal 36K\n-rw-r--r--. 1 root root 30K Jan 22 14:56 CentOS7.2daygeek.com-20191025.tar\n-rw-r--r--. 1 root root  25 Dec  9 03:31 user-add.sh\n\nnode2.2g.lab | CHANGED | rc=0 &gt;&gt;\ntotal 36K\n-rw-r--r--. 1 root root 30K Jan 23 02:26 CentOS7.2daygeek.com-20191025.tar\n-rw-rw-r--. 1 u1   u1    18 Jan 23 02:21 magi.txt\n</code></pre>\n<p>要将文件从一个位置复制到远程计算机上的另一个位置，使用以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m command -a "cp /home/u2/magi/ansible-1.txt /home/u2/magi/2g" --become\n</code></pre>\n<p>移动文件，使用以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m command -a "mv /home/u2/magi/ansible.txt /home/u2/magi/2g" --become\n</code></pre>\n<p>在&nbsp;<code>u1</code>&nbsp;用户目录下创建一个名为&nbsp;<code>ansible.txt</code>&nbsp;的新文件，运行以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m file -a "dest=/home/u1/ansible.txt owner=u1 group=u1 state=touch" --become\n</code></pre>\n<p>在&nbsp;<code>u1</code>&nbsp;用户目录下创建一个名为&nbsp;<code>magi</code>&nbsp;的新目录，运行以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m file -a "dest=/home/u1/magi mode=755 owner=u2 group=u2 state=directory" --become\n</code></pre>\n<p>将&nbsp;<code>u1</code>&nbsp;用户目录下的&nbsp;<code>ansible.txt</code>* 文件权限更改为&nbsp;<code>777</code>，运行以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m file -a "dest=/home/u1/ansible.txt mode=777" --become\n</code></pre>\n<p>删除&nbsp;<code>u1</code>&nbsp;用户目录下的&nbsp;<code>ansible.txt</code>&nbsp;文件，运行以下命令：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m file -a "dest=/home/u2/magi/ansible-1.txt state=absent" --become\n</code></pre>\n<p>使用以下命令删除目录，它将递归删除指定目录：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m file -a "dest=/home/u2/magi/2g state=absent" --become\n</code></pre>\n<h3 id="3%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86" class="mume-header">3）用户管理</h3>\n<p>你可以使用 Ansible 轻松执行用户管理活动。例如创建、删除用户以及向一个组添加用户。</p>\n<pre class="prettyprint linenums"><code>$ ansible all -m user -a "name=foo password=[crypted password here]"\n</code></pre>\n<p>运行以下命令删除用户：</p>\n<pre class="prettyprint linenums"><code>$ ansible all -m user -a "name=foo state=absent"\n</code></pre>\n<h3 id="4%E7%AE%A1%E7%90%86%E5%8C%85" class="mume-header">4）管理包</h3>\n<p>使用合适的 Ansible 包管理器模块可以轻松地管理安装包。例如，我们将使用&nbsp;<code>yum</code>&nbsp;模块来管理 CentOS 系统上的软件包。</p>\n<p>安装最新的 Apache（httpd）：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m yum -a "name=httpd state=latest"\n</code></pre>\n<p>卸载 Apache（httpd） 包：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m yum -a "name=httpd state=absent"\n</code></pre>\n<h3 id="5%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1" class="mume-header">5）管理服务</h3>\n<p>使用以下 Ansible 模块命令可以在 Linux 上管理任何服务。</p>\n<p>停止 httpd 服务：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m service -a "name=httpd state=stopped"\n</code></pre>\n<p>启动 httpd 服务：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m service -a "name=httpd state=started"\n</code></pre>\n<p>重启 httpd 服务：</p>\n<pre class="prettyprint linenums"><code>$ ansible web -m service -a "name=httpd state=restarted"\n</code></pre>\n<hr />\n<p>via:&nbsp;<a href="https://www.2daygeek.com/ansible-ad-hoc-command-quick-start-guide-with-examples/">https://www.2daygeek.com/ansible-ad-hoc-command-quick-start-guide-with-examples/</a></p>\n<p>作者：<a href="https://www.2daygeek.com/author/magesh/">Magesh Maruthamuthu</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/MjSeven">MjSeven</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sun, 28 Feb 2021 22:16:00 +0800',
          'comments': 'https://linux.cn/article-13163-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '硬核观察 | 弱密码“solarwinds123”可能是导致 SolarWinds 事件的攻击入口',
          'link': 'https://linux.cn/article-13162-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13162-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/154815yaj1x721yzejeklk.jpg" alt="" width="1280" height="720" /></p>\n<h3 id="%E5%BC%B1%E5%AF%86%E7%A0%81-solarwinds123-%E5%8F%AF%E8%83%BD%E6%98%AF%E5%AF%BC%E8%87%B4-solarwinds-%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%94%BB%E5%87%BB%E5%85%A5%E5%8F%A3" class="mume-header">弱密码 &ldquo;solarwinds123&rdquo; 可能是导致 SolarWinds 事件的攻击入口</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/154825ww445jw4anpua4zn.jpg" alt="" width="800" height="450" /></p>\n<p>SolarWinds 的一名实习生曾经使用密码 &ldquo;solarwinds123&rdquo;，并将其发布到 GitHub 上。2019 年时安全研究人员在互联网上发现了这个密码，并警告该公司它暴露了 SolarWinds 的文件服务器。而该公司 CEO 最近在听证会上承认，该密码在 2017 年就在内部使用了。听证会上，有众议员强烈批评了该公司，&ldquo;我有一个比 &lsquo;solarwinds123&rsquo; 更强的密码，以阻止我的孩子在 iPad 上看太多 YouTube! &rdquo;</p>\n<p>虽然不确定是不是因为这个或其它的弱密码而导致的入侵，但是很有可能就是因为内部管理缺位导致的渗透。</p>\n<p>大家来说说，你们内部系统的密码是不是弱密码？</p>\n<h3 id="%E7%94%A8-go-%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E7%9A%84%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E8%BF%91%E5%B9%B4%E6%9D%A5%E5%91%88%E7%88%86%E5%8F%91%E5%BC%8F%E5%A2%9E%E9%95%BF" class="mume-header">用 Go 语言编写的恶意软件近年来呈爆发式增长</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/154843d1xssdsxdsei0sz8.jpg" alt="" width="800" height="450" /></p>\n<p>根据网络安全公司 Intezer 本周发布的一份<a href="https://www.intezer.com/resource/year-of-the-gopher-2020-go-malware-round-up/">报告</a>，自 2017 年以来使用 Go 编程语言编写的恶意软件数量呈现爆发式增长，增幅超过 2000%。首个基于 Go 语言开发的恶意软件在 2012 才被检测到，但在 2019 年，它变成了一种常见现象。</p>\n<p>Go 语言之所以会出现这种突然暴涨的现象，主要有三个原因：Go 支持跨平台编译的简易流程；基于 Go 的安装文件难以被分析和逆向工程；Go 对网络数据包和请求工作的支持很好。</p>\n<p>一个技术好用不好用，可从在地下黑产中的流行程度看出来。</p>\n<h3 id="%E6%AF%94%E5%B0%94%E7%9B%96%E8%8C%A8%E6%9B%B4%E5%96%9C%E6%AC%A2%E7%94%A8%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%8F%AF%E8%83%BD%E6%98%AF%E5%9B%A0%E4%B8%BA%E9%A2%84%E8%A3%85%E8%BD%AF%E4%BB%B6" class="mume-header">比尔&bull;盖茨更喜欢用安卓手机，可能是因为预装软件</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/154933huwrp51nnhgzkuun.jpg" alt="" width="800" height="450" /></p>\n<p>微软已经没有自己的移动平台了，因为 Windows 10 Mobile 已经死了。所以，现在微软公司的高管和员工自然可以随心所欲地在安卓和 iPhone 之间选择了。</p>\n<p>而对于微软创始人比尔&bull;盖茨而言，安卓系统是更好的选择。盖茨<a href="https://www.macrumors.com/2021/02/26/bill-gates-prefers-android-over-iphone/">说</a>，&ldquo;其实我用的是安卓手机。因为我想接触各种事物，我会经常玩玩 iPhone，但我随身携带的是安卓手机。&rdquo;而使用安卓的原因可能是，&ldquo;一些安卓厂商预装微软软件的方式让我觉得很方便。他们对于软件与操作系统的连接方式更加灵活。&rdquo;</p>\n<p>封闭的如 iPhone，开放的如安卓，都取得了空前成功，但是后来效仿者却无法复制成功。所以，这里的原因和封闭或开放可能没有必然关系。</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sun, 28 Feb 2021 15:50:15 +0800',
          'comments': 'https://linux.cn/article-13162-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '在裸机上建立 Linux 云实例',
          'link': 'https://linux.cn/article-13161-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13161-1.html?utm_source=rss&utm_medium=rss',
          'description': '<blockquote>\n<p>在 Fedora 上用 virt-install 创建云镜像。</p>\n</blockquote>\n<p><img title="Sky with clouds and grass" src="https://img.linux.net.cn/data/attachment/album/202102/28/130111cx5pux33bt74o36g.jpg" width="1280" height="720" /></p>\n<p>虚拟化是使用最多的技术之一。Fedora Linux 使用&nbsp;<a href="https://alt.fedoraproject.org/cloud/">Cloud Base 镜像</a>&nbsp;来创建通用虚拟机（VM），但设置 Cloud Base 镜像的方法有很多。最近，用于调配虚拟机的&nbsp;<code>virt-install</code>&nbsp;命令行工具增加了对&nbsp;<code>cloud-init</code>&nbsp;的支持，因此现在可以使用它在本地配置和运行云镜像。</p>\n<p>本文介绍了如何在裸机上设置一个基本的 Fedora 云实例。同样的步骤可以用于任何 raw 或Qcow2 Cloud Base 镜像。</p>\n<h3 id="%E4%BB%80%E4%B9%88%E6%98%AF-cloud-init" class="mume-header">什么是 --cloud-init？</h3>\n<p><code>virt-install</code>&nbsp;命令使用&nbsp;<code>libvirt</code>&nbsp;创建一个 KVM、Xen 或&nbsp;<a href="https://www.redhat.com/sysadmin/exploring-containers-lxc">LXC</a>&nbsp;客户机。<code>--cloud-init</code>&nbsp;选项使用一个本地文件（称为 &ldquo;nocloud 数据源&rdquo;），所以你不需要网络连接来创建镜像。在第一次启动时，<code>nocloud</code>&nbsp;方法会从 iso9660 文件系统（<code>.iso</code>&nbsp;文件）中获取访客机的用户数据和元数据。当你使用这个选项时，<code>virt-install</code>&nbsp;会为 root 用户账户生成一个随机的（临时）密码，提供一个串行控制台，以便你可以登录并更改密码，然后在随后的启动中禁用&nbsp;<code>--cloud-init</code>&nbsp;选项。</p>\n<h3 id="%E8%AE%BE%E7%BD%AE-fedora-cloud-base-%E9%95%9C%E5%83%8F" class="mume-header">设置 Fedora Cloud Base 镜像</h3>\n<p>首先，<a href="https://alt.fedoraproject.org/cloud/">下载一个 Fedora Cloud Base（for OpenStack）镜像</a>。</p>\n<p><img title="Fedora Cloud website" src="https://img.linux.net.cn/data/attachment/album/202102/28/130121cauyuhhncm2lclfx.png" alt="Fedora Cloud 网站截图" /></p>\n<p>然后安装&nbsp;<code>virt-install</code>&nbsp;命令：</p>\n<pre class="prettyprint linenums"><code>$ sudo dnf install virt-install\n</code></pre>\n<p>一旦&nbsp;<code>virt-install</code>&nbsp;安装完毕并下载了 Fedora Cloud Base 镜像，请创建一个名为<code>cloudinit-user-data.yaml</code>&nbsp;的小型 YAML 文件，其中包含&nbsp;<code>virt-install</code>&nbsp;将使用的一些配置行：</p>\n<pre class="prettyprint linenums"><code>#cloud-config\npassword: \'r00t\'\nchpasswd: { expire: false }\n</code></pre>\n<p>这个简单的云配置可以设置默认的&nbsp;<code>fedora</code>&nbsp;用户的密码。如果你想使用会过期的密码，可以将其设置为登录后过期。</p>\n<p>创建并启动虚拟机：</p>\n<pre class="prettyprint linenums"><code>$ virt-install --name local-cloud18012709 \\\n--memory 2000 --noreboot \\\n--os-variant detect=on,name=fedora-unknown \\\n--cloud-init user-data="/home/r3zr/cloudinit-user-data.yaml" \\\n--disk=size=10,backing_store="/home/r3zr/Downloads/Fedora-Cloud-Base-33-1.2.x86_64.qcow2"\n</code></pre>\n<p>在这个例子中，<code>local-cloud18012709</code>&nbsp;是虚拟机的名称，内存设置为 2000MiB，磁盘大小（虚拟硬盘）设置为 10GB，<code>--cloud-init</code>&nbsp;和&nbsp;<code>backing_store</code>&nbsp;分别带有你创建的 YAML 配置文件和你下载的 Qcow2 镜像的绝对路径。</p>\n<h3 id="%E7%99%BB%E5%BD%95" class="mume-header">登录</h3>\n<p>在创建镜像后，你可以用用户名&nbsp;<code>fedora</code>&nbsp;和 YAML 文件中设置的密码登录（在我的例子中，密码是&nbsp;<code>r00t</code>，但你可能用了别的密码）。一旦你第一次登录，请更改你的密码。</p>\n<p>要关闭虚拟机的电源，执行&nbsp;<code>sudo poweroff</code>&nbsp;命令，或者按键盘上的&nbsp;<code>Ctrl+]</code>。</p>\n<h3 id="%E5%90%AF%E5%8A%A8-%E5%81%9C%E6%AD%A2%E5%92%8C%E9%94%80%E6%AF%81%E8%99%9A%E6%8B%9F%E6%9C%BA" class="mume-header">启动、停止和销毁虚拟机</h3>\n<p><code>virsh</code>&nbsp;命令用于启动、停止和销毁虚拟机。</p>\n<p>要启动任何停止的虚拟机：</p>\n<pre class="prettyprint linenums"><code>$ virsh start &lt;vm-name&gt;\n</code></pre>\n<p>要停止任何运行的虚拟机：</p>\n<pre class="prettyprint linenums"><code>$ virsh shutdown &lt;vm-name&gt;\n</code></pre>\n<p>要列出所有处于运行状态的虚拟机：</p>\n<pre class="prettyprint linenums"><code>$ virsh list\n</code></pre>\n<p>要销毁虚拟机：</p>\n<pre class="prettyprint linenums"><code>$ virsh destroy &lt;vm-name&gt;\n</code></pre>\n<p><img title="Destroying a VM" src="https://img.linux.net.cn/data/attachment/album/202102/28/130121fd0yz9dsnqsvqvms.png" alt="销毁虚拟机" /></p>\n<h3 id="%E5%BF%AB%E9%80%9F%E8%80%8C%E7%AE%80%E5%8D%95" class="mume-header">快速而简单</h3>\n<p><code>virt-install</code>&nbsp;命令与&nbsp;<code>--cloud-init</code>&nbsp;选项相结合，可以快速轻松地创建云就绪镜像，而无需担心是否有云来运行它们。无论你是在为重大部署做准备，还是在学习容器，都可以试试<code>virt-install --cloud-init</code>。</p>\n<p>在云计算工作中，你有喜欢的工具吗？请在评论中告诉我们。</p>\n<hr />\n<p>via:&nbsp;<a href="https://opensource.com/article/21/1/cloud-image-virt-install">https://opensource.com/article/21/1/cloud-image-virt-install</a></p>\n<p>作者：<a href="https://opensource.com/users/sumantro">Sumantro Mukherjee</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/wxy">wxy</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sun, 28 Feb 2021 13:01:00 +0800',
          'comments': 'https://linux.cn/article-13161-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '使用 Linux 软件包管理器的 5 个理由',
          'link': 'https://linux.cn/article-13160-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13160-1.html?utm_source=rss&utm_medium=rss',
          'description': '<blockquote>\n<p>包管理器可以跟踪你安装的软件的所有组件，使得更新、重装和故障排除更加容易。</p>\n</blockquote>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/28/123014kuhttz1kkkexwh9j.jpg" alt="" width="1280" height="720" /></p>\n<p>在 2021 年，人们喜欢 Linux 的理由比以往任何时候都多。在这个系列中，我将分享 21 个使用 Linux 的不同理由。今天，我将谈谈软件仓库。</p>\n<p>在我使用 Linux 之前，我认为在计算机上安装的应用是理所当然的。我会根据需要安装应用，如果我最后没有使用它们，我就会把它们忘掉，让它们占用我的硬盘空间。终于有一天，我的硬盘空间会变得稀缺，我就会疯狂地删除应用，为更重要的数据腾出空间。但不可避免的是，应用只能释放出有限的空间，所以我将注意力转移到与这些应用一起安装的所有其他零碎内容上，无论是媒体内容还是配置文件和文档。这不是一个管理电脑的好方法。我知道这一点，但我并没有想过要有其他的选择，因为正如人们所说，你不知道自己不知道什么。</p>\n<p>当我改用 Linux 时，我发现安装应用的方式有些不同。在 Linux 上，会建议你不要去网站上找应用的安装程序。取而代之的是，运行一个命令，应用就会被安装到系统上，并记录每个单独的文件、库、配置文件、文档和媒体资产。</p>\n<h3 id="%E4%BB%80%E4%B9%88%E6%98%AF%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93" class="mume-header">什么是软件仓库？</h3>\n<p>在 Linux 上安装应用的默认方法是从发行版软件仓库中安装。这可能听起来像应用商店，那是因为现代应用商店借鉴了很多软件仓库的概念。<a href="http://flathub.org">Linux 也有应用商店</a>，但软件仓库是独一无二的。你通过一个<em>包管理器</em>从软件仓库中获得一个应用，它使你的 Linux 系统能够记录和跟踪你所安装的每一个组件。</p>\n<p>这里有五个原因可以让你确切地知道你的系统上有什么东西，可以说是非常有用。</p>\n<h4 id="1-%E7%A7%BB%E9%99%A4%E6%97%A7%E5%BA%94%E7%94%A8" class="mume-header">1、移除旧应用</h4>\n<p>当你的计算机知道应用安装的每一个文件时，卸载你不再需要的文件真的很容易。在 Linux 上，安装&nbsp;<a href="https://opensource.com/article/21/1/text-editor-roundup">31 个不同的文本编辑器</a>，然后卸载 30 个你不喜欢的文本编辑器是没有问题的。当你在 Linux 上卸载的时候，你就真的卸载了。</p>\n<h4 id="2-%E6%8C%89%E4%BD%A0%E7%9A%84%E6%84%8F%E6%80%9D%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85" class="mume-header">2、按你的意思重新安装</h4>\n<p>不仅卸载要彻底，<em>重装</em>也很有意义。在许多平台上，如果一个应用出了问题，有时会建议你重新安装它。通常情况下，谁也说不清为什么要重装一个应用。不过，人们还是经常会隐隐约约地怀疑某个地方的文件已经损坏了（换句话说，数据写入错误），所以希望重装可以覆盖坏的文件以让软件重新工作。这是个不错的建议，但对于任何技术人员来说，不知道是什么地方出了问题都是令人沮丧的。更糟糕的是，如果不仔细跟踪，就不能保证所有的文件都会在重装过程中被刷新，因为通常没有办法知道与应用程序一起安装的所有文件在第一时间就删除了。有了软件包管理器，你可以强制彻底删除旧文件，以确保新文件的全新安装。同样重要的是，你可以研究每个文件并可能找出导致问题的文件，但这是开源和 Linux 的一个特点，而不是包管理。</p>\n<h4 id="3-%E4%BF%9D%E6%8C%81%E4%BD%A0%E5%BA%94%E7%94%A8%E7%9A%84%E6%9B%B4%E6%96%B0" class="mume-header">3、保持你应用的更新</h4>\n<p>不要听别人告诉你的 Linux 比其他操作系统&ldquo;更安全&rdquo;。计算机是由代码组成的，而我们人类每天都会以新的、有趣的方式找到利用这些代码的方法。因为 Linux 上的绝大多数应用都是开源的，所以许多漏洞都会以&ldquo;<ruby>常见漏洞和暴露<rt>Common Vulnerability and Exposures</rt></ruby>&rdquo;（CVE）的形式公开。大量涌入的安全漏洞报告似乎是一件坏事，但这绝对是一个<em>知道</em>远比<em>不知道</em>好的案例。毕竟，没有人告诉你有问题，并不意味着没有问题。漏洞报告是好的。它们对每个人都有好处。而且，当开发人员修复安全漏洞时，对你而言，及时获得这些修复程序很重要，最好不用自己记着动手修复。</p>\n<p>包管理器正是为了实现这一点而设计的。当应用收到更新时，无论是修补潜在的安全问题还是引入令人兴奋的新功能，你的包管理器应用都会提醒你可用的更新。</p>\n<h4 id="4-%E4%BF%9D%E6%8C%81%E8%BD%BB%E4%BE%BF" class="mume-header">4、保持轻便</h4>\n<p>假设你有应用 A 和应用 B，这两个应用都需要库 C。在某些操作系统上，通过得到 A 和 B，就会得到了两个 C 的副本。这显然是多余的，所以想象一下，每个应用都会发生几次。冗余的库很快就会增加，而且由于对一个给定的库没有单一的&ldquo;正确&rdquo;来源，所以几乎不可能确保你使用的是最新的甚至是一致的版本。</p>\n<p>我承认我不会整天坐在这里琢磨软件库，但我确实记得我琢磨的日子，尽管我不知道这就是困扰我的原因。在我还没有改用 Linux 之前，我在处理工作用的媒体文件时遇到错误，或者在玩不同的游戏时出现故障，或者在阅读 PDF 时出现怪异的现象，等等，这些都不是什么稀奇的事情。当时我花了很多时间去调查这些错误。我仍然记得，我的系统上有两个主要的应用分别捆绑了相同（但有区别）的图形后端技术。当一个程序的输出导入到另一个程序时，这种不匹配会导致错误。它本来是可以工作的，但是由于同一个库文件集合的旧版本中的一个错误，一个应用的热修复程序并没有给另一个应用带来好处。</p>\n<p>包管理器知道每个应用需要哪些后端（被称为<em>依赖关系</em>），并且避免重新安装已经在你系统上的软件。</p>\n<h4 id="5-%E4%BF%9D%E6%8C%81%E7%AE%80%E5%8D%95" class="mume-header">5、保持简单</h4>\n<p>作为一个 Linux 用户，我要感谢包管理器，因为它帮助我的生活变得简单。我不必考虑我安装的软件，我需要更新的东西，也不必考虑完成后是否真的将其卸载了。我毫不犹豫地试用软件。而当我在安装一台新电脑时，我运行&nbsp;<a href="https://opensource.com/article/20/9/install-packages-ansible">一个简单的 Ansible 脚本</a>&nbsp;来自动安装我所依赖的所有软件的最新版本。这很简单，很智能，也是一种独特的解放。</p>\n<h3 id="%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86" class="mume-header">更好的包管理</h3>\n<p>Linux 从整体看待应用和操作系统。毕竟，开源是建立在其他开源工作基础上的，所以发行版维护者理解依赖<em>栈</em>的概念。Linux 上的包管理了解你的整个系统、系统上的库和支持文件以及你安装的应用。这些不同的部分协调工作，为你提供了一套高效、优化和强大的应用。</p>\n<hr />\n<p>via:&nbsp;<a href="https://opensource.com/article/21/2/linux-package-management">https://opensource.com/article/21/2/linux-package-management</a></p>\n<p>作者：<a href="https://opensource.com/users/seth">Seth Kenlon</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/geekpi">geekpi</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sun, 28 Feb 2021 12:30:21 +0800',
          'comments': 'https://linux.cn/article-13160-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '硬核观察 | 微软开源抓出 SolarWinds 黑客的工具代码',
          'link': 'https://linux.cn/article-13159-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13159-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/183528wkq1yl5ffekujg1l.jpg" alt="" width="1280" height="720" /></p>\n<h3 id="%E5%BE%AE%E8%BD%AF%E5%BC%80%E6%BA%90%E6%8A%93%E5%87%BA-solarwinds-%E9%BB%91%E5%AE%A2%E7%9A%84%E5%B7%A5%E5%85%B7%E4%BB%A3%E7%A0%81" class="mume-header">微软开源抓出 SolarWinds 黑客的工具代码</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/183544m3zp9kg500f5f6p9.jpg" alt="" width="800" height="450" /></p>\n<p>微软利用 GitHub 的&nbsp;<a href="https://github.com/github/codeql">CodeQL</a>&nbsp;发现其源代码是否在 SolarWinds 供应链攻击中被修改。为了调查 SolarWinds Orion 软件更新中植入的恶意软件，微软开源了其使用的&nbsp;<a href="https://aka.ms/Solorigate-CodeQL-Queries">CodeQL 查询</a>。微软使用 CodeQL 查询分析其源代码，确认其源代码中没有与 SolarWinds 事件相关的泄密指标和编码模式。</p>\n<p>CodeQL 是一个语义代码分析引擎，它可以扫描发现代码库中的漏洞。使用 CodeQL，可以像对待数据一样查询代码。</p>\n<p>这是一个有用的工具，更好是，微软开源了其抓捕黑客代码的知识，这种积极主动开源的心态值得点赞。果然是开源大厂。</p>\n<h3 id="google-%E6%89%BF%E8%AE%A4-kubernetes-%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E5%A4%AA%E5%A4%8D%E6%9D%82" class="mume-header">Google 承认 Kubernetes 容器技术太复杂</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/183604hpudttr139t2hru1.jpg" alt="" width="800" height="449" /></p>\n<p>Google 的 GKE 产品负责人<a href="https://www.theregister.com/2021/02/25/google_kubernetes_autopilot/">说</a>，尽管有过去六年的进步，Kubernetes 仍然难以置信的复杂，过去一年他们看到很多企业用户拥抱 Kubernetes，但随后就陷入了困境。</p>\n<p>Google 推出了新的&nbsp;<a href="https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-overview">Autopilo</a>&nbsp;服务尝试简化配置和管理，可以通过预配置选项在减少灵活性的同时增加方便性。</p>\n<p>相对来说，AWS 等厂商的 Kubernetes 发行版在易用性方面就比原版的强出不少。</p>\n<h3 id="lastpass-%E5%AE%89%E5%8D%93%E5%BA%94%E7%94%A8%E4%B8%AD%E6%9C%89-7-%E4%B8%AA%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%BF%BD%E8%B8%AA%E5%99%A8" class="mume-header">LastPass 安卓应用中有 7 个嵌入式追踪器</h3>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/183614jgkffu3ebfqegz37.jpg" alt="" width="800" height="449" /></p>\n<p>一份关于著名的密码管理器 LastPass 的<a href="https://reports.exodus-privacy.eu.org/en/reports/165465/">报告显示</a>，它的 Android 应用中有 7 个追踪器，其中包括来自谷歌的 4 个追踪器，目的是进行分析和崩溃报告。这些追踪器收集到的信息包括正在使用的设备、移动运营商、账户类型、谷歌广告 ID 等。LastPass 表示这些数据用于帮助改进和优化产品，并且用户可以设置关闭。</p>\n<p>而对于其它的密码管理器，1Password 和 KeePass 中没有追踪器。开源的 Bitwarden 有两个，用于谷歌的 Firebase 分析和微软 Visual Studio 崩溃报告。</p>\n<p>我觉得，对于密码管理器这样的安全敏感应用，还是要谨慎点好。</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sat, 27 Feb 2021 18:38:00 +0800',
          'comments': 'https://linux.cn/article-13159-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '不习惯在终端使用 youtube-dl？可以使用这些 GUI 应用',
          'link': 'https://linux.cn/article-13158-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13158-1.html?utm_source=rss&utm_medium=rss',
          'description': '<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/143909m29a8m8kgkzmmskc.jpg" alt="" width="1280" height="720" /></p>\n<p>如果你一直在关注我们，可能已经知道&nbsp;<a href="https://itsfoss.com/youtube-dl-github-takedown/">youtube-dl 项目曾被 GitHub 暂时下架</a>&nbsp;以合规。但它现在已经恢复并完全可以访问，可以说它并不是一个非法的工具。</p>\n<p>它是一个非常有用的命令行工具，可以让你&nbsp;<a href="https://itsfoss.com/download-youtube-videos-ubuntu/">从 YouTube</a>&nbsp;和其他一些网站下载视频。使用&nbsp;<a href="https://itsfoss.com/download-youtube-linux/">youtube-dl</a>&nbsp;并不复杂，但我明白使用命令来完成这种任务并不是每个人都喜欢的方式。</p>\n<p>好在有一些应用为&nbsp;<code>youtube-dl</code>&nbsp;工具提供了 GUI 前端。</p>\n<h3 id="%E4%BD%BF%E7%94%A8-youtube-dl-gui-%E5%BA%94%E7%94%A8%E7%9A%84%E5%85%88%E5%86%B3%E6%9D%A1%E4%BB%B6" class="mume-header">使用 youtube-dl GUI 应用的先决条件</h3>\n<p>在你尝试下面提到的一些选择之前，你可能需要在你的系统上安装&nbsp;<code>youtube-dl</code>&nbsp;和&nbsp;<a href="https://ffmpeg.org/">FFmpeg</a>，才能够下载/选择不同的格式进行下载。</p>\n<p>你可以按照我们的&nbsp;<a href="https://itsfoss.com/ffmpeg/#install">ffmpeg 使用完整指南</a>&nbsp;进行设置，并探索更多关于它的内容。</p>\n<p>要安装&nbsp;<a href="https://youtube-dl.org/">youtube-dl</a>，你可以在 Linux 终端输入以下命令：</p>\n<pre class="prettyprint linenums"><code>sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\n</code></pre>\n<p>下载最新版本后，你只需要输入以下内容使其可执行就可使用：</p>\n<pre class="prettyprint linenums"><code>sudo chmod a+rx /usr/local/bin/youtube-dl\n</code></pre>\n<p>如果你需要其他方法安装它，也可以按照<a href="https://ytdl-org.github.io/youtube-dl/download.html">官方安装说明</a>进行安装。</p>\n<h3 id="youtube-dl-gui-%E5%BA%94%E7%94%A8" class="mume-header">Youtube-dl GUI 应用</h3>\n<p>大多数 Linux 上的下载管理器也允许你从 YouTube 和其他网站下载视频。然而，youtube-dl GUI 应用可能有额外的选项，如只提取音频或下载特定分辨率和视频格式。</p>\n<p>请注意，下面的列表没有特别的排名顺序。你可以根据你的要求选择。</p>\n<h4 id="1-alltube-download" class="mume-header">1、AllTube Download</h4>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/144018ibecoq5wm7fwfcmd.jpg" alt="" /></p>\n<p><strong>主要特点：</strong></p>\n<ul>\n<li>Web GUI</li>\n<li>开源</li>\n<li>可以自托管</li>\n</ul>\n<p>AllTube 是一个开源的 web GUI，你可以通过&nbsp;<a href="https://alltubedownload.net/">https://alltubedownload.net/</a>&nbsp;来访问。</p>\n<p>如果你选择使用这款软件，你不需要在系统上安装 youtube-dl 或 ffmpeg。它提供了一个简单的用户界面，你只需要粘贴视频的 URL，然后继续选择你喜欢的文件格式下载。你也可以选择将其部署在你的服务器上。</p>\n<p>请注意，你不能使用这个工具提取视频的 MP3 文件，它只适用于视频。你可以通过他们的&nbsp;<a href="https://github.com/Rudloff/alltube">GitHub 页面</a>探索更多关于它的信息。</p>\n<ul>\n<li><a href="https://alltubedownload.net/">AllTube Download Web GUI</a></li>\n</ul>\n<h4 id="2-youtube-dl-gui" class="mume-header">2、youtube-dl GUI</h4>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/144018civmqtttm3qmeqv9.jpg" alt="" /></p>\n<p><strong>主要特点：</strong></p>\n<ul>\n<li>跨平台</li>\n<li>显示预计下载大小</li>\n<li>有音频和视频下载选择</li>\n</ul>\n<p>一个使用 electron 和 node.js 制作的有用的跨平台 GUI 应用。你可以很容易地下载音频和视频，以及选择各种可用的文件格式的选项。</p>\n<p>如果你愿意的话，你还可以下载一个频道或播放列表的部分内容。特别是当你下载高质量的视频文件时，预计的下载大小绝对是非常方便的。</p>\n<p>如上所述，它也适用于 Windows 和 MacOS。而且，你会在它的&nbsp;<a href="https://github.com/jely2002/youtube-dl-gui/releases/tag/v1.8.7">GitHub 发布</a>中得到一个适用于 Linux 的 AppImage 文件。</p>\n<ul>\n<li><a href="https://github.com/jely2002/youtube-dl-gui">Youtube-dl GUI</a></li>\n</ul>\n<h4 id="3-videomass" class="mume-header">3、Videomass</h4>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/144018vt8wxgpcecrjdm6x.jpg" alt="" /></p>\n<p><strong>主要特点：</strong></p>\n<ul>\n<li>跨平台</li>\n<li>转换音频/视频格式</li>\n<li>支持多个 URL</li>\n<li>适用于也想使用 FFmpeg 的用户</li>\n</ul>\n<p>如果你想从 YouTube 下载视频或音频，并将它们转换为你喜欢的格式，Videomass 可以是一个不错的选择。</p>\n<p>要做到这点，你需要在你的系统上同时安装 youtube-dl 和 ffmpeg。你可以轻松的添加多个 URL 来下载，还可以根据自己的喜好设置输出目录。</p>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/144019ktx0h4tkk4hw4utt.jpg" alt="" /></p>\n<p>你还可以获得一些高级设置来禁用 youtube-dl，改变文件首选项，以及随着你的探索，还有一些更方便的选项。</p>\n<p>它为 Ubuntu 用户提供了一个 PPA，为任何其他 Linux 发行版提供了一个 AppImage 文件。在它的&nbsp;<a href="https://github.com/jeanslack/Videomass">Github 页面</a>探索更多信息。</p>\n<ul>\n<li><a href="https://jeanslack.github.io/Videomass/">Videomass</a></li>\n</ul>\n<h4 id="%E9%99%84%E9%80%81haruna-video-player" class="mume-header">附送：Haruna Video Player</h4>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/144020he7444txhq7w7xah.jpg" alt="" /></p>\n<p><strong>主要特点：</strong></p>\n<ul>\n<li>播放/流式传输 YouTube 视频</li>\n</ul>\n<p>Haruna Video Player 原本是&nbsp;<a href="https://mpv.io/">MPV</a>&nbsp;的前端。虽然使用它不能下载 YouTube 视频，但可以通过 youtube-dl 观看/流式传输 YouTube 视频。</p>\n<p>你可以在我们的<a href="https://itsfoss.com/haruna-video-player/">文章</a>中探索更多关于视频播放器的内容。</p>\n<h3 id="%E6%80%BB%E7%BB%93" class="mume-header">总结</h3>\n<p>尽管你可能会在 GitHub 和其他平台上找到更多的 youtube-dl GUI，但它们中的大多数都不能很好地运行，最终会显示出多个错误，或者不再积极开发。</p>\n<p><a href="https://github.com/axcore/tartube">Tartube</a>&nbsp;就是这样的一个选择，你可以尝试一下，但可能无法达到预期的效果。我用 Pop!_OS 和 Ubuntu MATE 20.04（全新安装）进行了测试。每次我尝试下载一些东西时，无论我怎么做都会失败（即使系统中安装了 youtube-dl 和 ffmpeg）。</p>\n<p>所以，我个人最喜欢的似乎是 Web GUI（<a href="https://github.com/Rudloff/alltube">AllTube Download</a>），它不依赖于安装在你系统上的任何东西，也可以自托管。</p>\n<p>如果我错过了你最喜欢的选择，请在评论中告诉我什么是最适合你的。</p>\n<hr />\n<p>via:&nbsp;<a href="https://itsfoss.com/youtube-dl-gui-apps/">https://itsfoss.com/youtube-dl-gui-apps/</a></p>\n<p>作者：<a href="https://itsfoss.com/author/ankush/">Ankush Das</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/geekpi">geekpi</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sat, 27 Feb 2021 14:40:18 +0800',
          'comments': 'https://linux.cn/article-13158-1.html?utm_source=rss&utm_medium=rss'
        },
        {
          'title': '选择 Linux 来做艺术设计的 4 个理由',
          'link': 'https://linux.cn/article-13157-1.html?utm_source=rss&utm_medium=rss',
          'guid': 'https://linux.cn/article-13157-1.html?utm_source=rss&utm_medium=rss',
          'description': '<blockquote>\n<p>开源会强化你的创造力。因为它把你带出专有的思维定势，开阔你的视野，从而带来更多的可能性。让我们探索一些开源的创意项目。</p>\n</blockquote>\n<p><img title="Painting art on a computer screen" src="https://img.linux.net.cn/data/attachment/album/202102/27/135654k1x4um187i1i7wm1.jpg" width="1280" height="720" /></p>\n<p>2021 年，人们比以前的任何时候都更有理由来爱上 Linux。在这个系列，我会分享 21 个选择 Linux 的原因。今天，让我来解释一下，为什么 Linux 是艺术设计的绝佳选择。</p>\n<p>Linux 在服务器和云计算方面获得很多的赞誉。让不少人感到惊讶的是，Linux 刚好也有一系列的很棒的创意设计工具，并且这些工具在用户体验和质量方面可以媲美那些流行的创意设计工具。我第一次使用开源的设计工具时，并不是因为我没有其他工具可以选择。相反的，我是在接触了大量的这些领先的公司提供的专有设计工具后，才开始使用开源设计工具。我之所以最后选择开源设计工具是因为开源更有意义，而且我能获得更好的产出。这些都是一些笼统的说法，所以请允许我解释一下。</p>\n<h3 id="%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E6%84%8F%E5%91%B3%E7%9D%80%E9%AB%98%E7%94%9F%E4%BA%A7%E5%8A%9B" class="mume-header">高可用性意味着高生产力</h3>\n<p>&ldquo;生产力&rdquo;这一次对于不同的人来说含义不一样。当我想到生产力，就是当你坐下来做事情，并能够完成你给自己设定的所有任务的时候，这时就很有成就感。但是当你总是被一些你无法掌控的事情打断，那你的生产力就下降了。</p>\n<p>计算机看起来是不可预测的，诚然有很多事情会出错。电脑是由很多的硬件组成的，它们任何一个都有可能在任何时间出问题。软件会有 bug，也有修复这些 bug 的更新，而更新后又会带来新的 bug。如果你对电脑不了解，它可能就像一个定时炸弹，等着爆发。带着数字世界里的这么多的潜在问题，去接受一个当某些条件不满足（比如许可证，或者订阅费）就会不工作的软件，对我来说就显得很不理智。</p>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/135731kr2xh11472i29v1o.jpg" alt="Inkscape 应用" /></p>\n<p>开源的创意设计应用不需要订阅费，也不需要许可证。在你需要的时候，它们都能获取得到，并且通常都是跨平台的。这就意味着，当你坐在工作的电脑面前，你就能确定你能用到那些必需的软件。而如果某天你很忙碌，却发现你面前的电脑不工作了，解决办法就是找到一个能工作的，安装你的创意设计软件，然后开始工作。</p>\n<p>例如，要找到一台无法运行 Inkscape 的电脑，比找到一台可以运行那些专有软件的电脑要难得多。这就叫做高可用。这是游戏规则的改变者。我从来不曾遇到因为软件用不了而不得不干等，浪费我数小时时间的事情。</p>\n<h3 id="%E5%BC%80%E6%94%BE%E8%AE%BF%E9%97%AE%E6%9B%B4%E6%9C%89%E5%88%A9%E4%BA%8E%E5%A4%9A%E6%A0%B7%E6%80%A7" class="mume-header">开放访问更有利于多样性</h3>\n<p>我在设计行业工作的时候，我的很多同事都是通过自学的方式来学习艺术和技术方面的知识，这让我感到惊讶。有的通过使用那些最新的昂贵的&ldquo;专业&rdquo;软件来自学，但总有一大群人是通过使用自由和开源的软件来完善他们的数字化的职业技能。因为，对于孩子，或者没钱的大学生来说，这才是他们能负担的起，而且很容易就能获得的。</p>\n<p>这是一种不同的高可用性，但这对我和许多其他用户来说很重要，如果不是因为开源，他们就不会从事创意行业。即使那些有提供付费订阅的开源项目，比如 Ardour，都能确保他的用户在不需要支付任何费用的时候也能使用软件。</p>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/135731cz8lr9jjj9b3t3ad.jpg" alt="Ardour 界面" /></p>\n<p>当你不限制别人用你的软件的时候，你其实拥有了更多的潜在用户。如果你这样做了，那么你就开放了一个接收多样的创意声音的窗口。艺术钟爱影响力，你可以借鉴的经验和想法越多就越好。这就是开源设计软件所带来的可能性。</p>\n<h3 id="%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E6%94%AF%E6%8C%81%E6%9B%B4%E5%85%B7%E5%8C%85%E5%AE%B9%E6%80%A7" class="mume-header">文件格式支持更具包容性</h3>\n<p>我们都知道在几乎所有行业里面包容性的价值。在各种意义上，邀请更多的人到派对可以造就更壮观的场面。知道这一点，当看到有的项目或者创新公司只邀请某些人去合作，只接受某些文件格式，就让我感到很痛苦。这看起来很陈旧，就像某个远古时代的精英主义的遗迹，而这是即使在今天都在发生的真实问题。</p>\n<p>令人惊讶和不幸的是，这不是因为技术上的限制。专有软件可以访问开源的文件格式，因为这些格式是开源的，而且可以自由地集成到各种应用里面。集成这些格式不需要任何回报。而相比之下，专有的文件格式被笼罩在秘密之中，只被限制于提供给几个愿意付钱的人使用。这很糟糕，而且常常，你无法在没有这些专有软件的情况下打开一些文件来获取你的数据。令人惊喜的是，开源的设计软件却是尽力的支持更多的专有文件格式。以下是一些 Inkscape 所支持的令人难以置信的列表样本：</p>\n<p><img src="https://img.linux.net.cn/data/attachment/album/202102/27/135731zlbjleb6lkteite6.jpg" alt="可用的 Inkscape 文件格式" /></p>\n<p>而这大部分都是在没有这些专有格式厂商的支持下开发出来的。</p>\n<p>支持开放的文件格式可以更包容，对所有人都更好。</p>\n<h3 id="%E5%AF%B9%E6%96%B0%E7%9A%84%E5%88%9B%E6%84%8F%E6%B2%A1%E6%9C%89%E9%99%90%E5%88%B6" class="mume-header">对新的创意没有限制</h3>\n<p>我之所以爱上开源的其中一个原因是，解决一个指定任务时，有彻底的多样性。当你在专有软件周围时，你所看到的世界是基于你所能够获取得到的东西。比如说，你过你打算处理一些照片，你通常会把你的意图局限在你所知道的可能性上面。你从你的架子上的 4 款或 10 款应用中，挑选出 3 款，因为它们是目前你唯一能够获取得到的选项。</p>\n<p>在开源领域，你通常会有好几个&ldquo;显而易见的&rdquo;必备解决方案，但同时你还有一打的角逐者在边缘转悠，供你选择。这些选项有时只是半成品，或者它们超级专注于某项任务，又或者它们学起来有点挑战性，但最主要的是，它们是独特的，而且充满创新的。有时候，它们是被某些不按&ldquo;套路&rdquo;出牌的人所开发的，因此处理的方法和市场上现有的产品截然不同。其他时候，它们是被那些熟悉做事情的&ldquo;正确&rdquo;方式，但还是在尝试不同策略的人所开发的。这就像是一个充满可能性的巨大的动态的头脑风暴。</p>\n<p>这种类型的日常创新能够引领出闪现的灵感、光辉时刻，或者影响广泛的通用性改进。比如说，著名的 GIMP 滤镜，（用于从图像中移除项目并自动替换背景）是如此的受欢迎以至于后来被专有图片编辑软件商拿去&ldquo;借鉴&rdquo;。这是成功的一步，但是对于一个艺术家而言，个人的影响才是最关键的。我常感叹于新的 Linux 用户的创意，而我只是在技术展会上展示给他们一个简单的音频，或者视频滤镜，或者绘图应用。没有任何的指导，或者应用场景，从简单的交互中喷发出来的关于新的工具的主意，是令人兴奋和充满启发的，通过实验中一些简单的工具，一个全新的艺术系列可以轻而易举的浮现出来。</p>\n<p>只要在适当的工具集都有的情况下，有很多方式来更有效的工作。虽然私有软件通常也不会反对更聪明的工作习惯的点子，专注于实现自动化任务让用户可以更轻松的工作，对他们也没有直接的收益。Linux 和开源软件就是很大程度专为&nbsp;<a href="https://opensource.com/article/20/11/orchestration-vs-automation">自动化和编排</a>&nbsp;而建的，而不只是服务器。像&nbsp;<a href="https://opensource.com/life/16/6/fun-and-semi-useless-toys-linux#imagemagick">ImageMagick</a>&nbsp;和&nbsp;<a href="https://opensource.com/article/21/1/gimp-scripting">GIMP 脚本</a>&nbsp;这样的工具改变了我的处理图片的方式，包括批量处理方面和纯粹实验方面。</p>\n<p>你永远不知道你可以创造什么，如果你有一个你从来想象不到会存在的工具的话。</p>\n<h3 id="linux-%E8%89%BA%E6%9C%AF%E5%AE%B6" class="mume-header">Linux 艺术家</h3>\n<p>这里有&nbsp;<a href="https://librearts.org">使用开源的艺术家社区</a>，从&nbsp;<a href="https://pixls.us">photography</a>&nbsp;到&nbsp;<a href="https://www.redhat.com/en/blog/channel/red-hat-open-studio">makers</a>&nbsp;到&nbsp;<a href="https://linuxmusicians.com">musicians</a>，还有更多更多。如果你想要创新，试试 Linux 吧。</p>\n<hr />\n<p>via:&nbsp;<a href="https://opensource.com/article/21/2/linux-art-design">https://opensource.com/article/21/2/linux-art-design</a></p>\n<p>作者：<a href="https://opensource.com/users/seth">Seth Kenlon</a>&nbsp;选题：<a href="https://github.com/lujun9972">lujun9972</a>&nbsp;译者：<a href="https://github.com/amorsu">amorsu</a>&nbsp;校对：<a href="https://github.com/wxy">wxy</a></p>\n<p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject">LCTT</a>&nbsp;原创编译，<a href="https://linux.cn/">Linux中国</a>&nbsp;荣誉推出</p>',
          'author': 'linux@linux.cn (linux)',
          'pubDate': 'Sat, 27 Feb 2021 13:57:28 +0800',
          'comments': 'https://linux.cn/article-13157-1.html?utm_source=rss&utm_medium=rss'
        }
      ]
    },
    '@version': '2.0'
  }
}
